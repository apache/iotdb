#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

####################
### DeviceGroup Configuration
####################
# could set ip or hostname
# Datatype: String
config_node_rpc_address=host0

# used for communication between data node and config node
# Datatype: int
config_node_rpc_port=22277

# used for communication between config node and config node
# Datatype: int
config_node_internal_port=22278

# all config node address and internal port
# every node should have the same config_node_address_lists
# Datatype: String
config_node_address_lists=host0:22278,host1:22278,host2:22278

# Number of DeviceGroups per StorageGroup
# Datatype: int
# device_group_count=10000

# DeviceGroup hash algorithm
# Datatype: String
# These hashing algorithms are currently supported:
# 1. org.apache.iotdb.commons.hash.BKDRHashExecutor(Default)
# 2. org.apache.iotdb.commons.hash.APHashExecutor
# 3. org.apache.iotdb.commons.hash.JSHashExecutor
# 4. org.apache.iotdb.commons.hash.SDBMHashExecutor
# Also, if you want to implement your own hash algorithm, you can inherit the DeviceGroupHashExecutor class and
# modify this parameter to correspond to your Java class
# device_group_hash_executor_class=org.apache.iotdb.commons.hash.BKDRHashExecutor


####################
### thrift rpc configuration
####################
# Datatype: boolean
# rpc_thrift_compression_enable=false

# if true, a snappy based compression method will be called before sending data by the network
# Datatype: boolean
# this feature is under development, set this as false before it is done.
# rpc_advanced_compression_enable=false

# Datatype: int
# rpc_max_concurrent_client_num=65535

# thrift max frame size, 512MB by default
# Datatype: int
# thrift_max_frame_size=536870912

# thrift init buffer size
# Datatype: int
# thrift_init_buffer_size=1024