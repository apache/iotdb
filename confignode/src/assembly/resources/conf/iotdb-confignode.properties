#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

####################
### Config Node RPC Configuration
####################


# Used for cluster internal RPC communication.
# Could set 0.0.0.0, 127.0.0.1(for local test) or ipv4 address.
# Datatype: String
cn_internal_address=0.0.0.0


# Used for cluster internal RPC communication
# Datatype: int
cn_internal_port=22277


# Used for ConfigNodeGroup's ConsensusLayer interior communication
# Datatype: int
cn_consensus_port=22278

####################
### Target Config Nodes
####################

# At least one running ConfigNode should be set for joining the cluster
# Format: ip:port
# where the ip should be consistent with the target ConfigNode's confignode_internal_address,
# and the port should be consistent with the target ConfigNode's confignode_internal_port.
# For the first ConfigNode to start, target_config_nodes points to its own internal_address:internal_port.
# For other ConfigNodes that are started or restarted, target_config_nodes points to any running ConfigNode's internal_address:internal_port.
# Notice: The ip for any target_config_node should never be 0.0.0.0
# Datatype: String
# cn_target_config_nodes=127.0.0.1:22277


####################
### Directory configuration
####################

# ConfigNode consensus protocol type.
# This parameter is unmodifiable after ConfigNode starts for the first time.
# These consensus protocols are currently supported:
# 1. org.apache.iotdb.consensus.standalone.StandAloneConsensus(Consensus patterns optimized specifically for single replica)
# 2. org.apache.iotdb.consensus.ratis.RatisConsensus(Raft protocol)
# cn_consensus_protocol_class=org.apache.iotdb.consensus.standalone.RatisConsensus

# system dir
# If this property is unset, system will save the data in the default relative path directory under the confignode folder(i.e., %CONFIGNODE_HOME%/data/confignode/system).
# If it is absolute, system will save the data in exact location it points to.
# If it is relative, system will save the data in the relative path directory it indicates under the confignode folder.
# For windows platform
# If its prefix is a drive specifier followed by "\\", or if its prefix is "\\\\", then the path is absolute. Otherwise, it is relative.
# cn_system_dir=data\\confignode\\system
# For Linux platform
# If its prefix is "/", then the path is absolute. Otherwise, it is relative.
# cn_system_dir=data/confignode/system


# consensus dir
# If this property is unset, system will save the data in the default relative path directory under the confignode folder(i.e., %CONFIGNODE_HOME%/data/confignode/consensus).
# If it is absolute, system will save the data in exact location it points to.
# If it is relative, system will save the data in the relative path directory it indicates under the confignode folder.
# Note: If data_dir is assigned an empty string(i.e.,zero-size), it will be handled as a relative path.
# For windows platform
# If its prefix is a drive specifier followed by "\\", or if its prefix is "\\\\", then the path is absolute. Otherwise, it is relative.
# cn_consensus_dir=data\\confignode\\consensus
# For Linux platform
# If its prefix is "/", then the path is absolute. Otherwise, it is relative.
# cn_consensus_dir=data/confignode/consensus



####################
### thrift rpc configuration
####################


# this feature is under development, set this as false before it is done.
# Datatype: boolean
# cn_rpc_thrift_compression_enable=false


# if true, a snappy based compression method will be called before sending data by the network
# Datatype: boolean
# this feature is under development, set this as false before it is done.
# cn_rpc_advanced_compression_enable=false


# Datatype: int
# cn_rpc_max_concurrent_client_num=65535


# thrift max frame size, 512MB by default
# Datatype: int
# cn_thrift_max_frame_size=536870912


# thrift init buffer size
# Datatype: int
# cn_thrift_init_buffer_size=1024


# Thrift socket and connection timeout between raft nodes, in milliseconds.
# Datatype: int
# cn_connection_timeout_ms=20000


# selector thread (TAsyncClientManager) nums for async thread in a clientManager
# Datatype: int
# cn_selector_thread_nums_of_client_manager=1


####################
### Directory configuration
####################


# system dir
# If this property is unset, system will save the data in the default relative path directory under the confignode folder(i.e., %CONFIGNODE_HOME%/data/system).
# If it is absolute, system will save the data in exact location it points to.
# If it is relative, system will save the data in the relative path directory it indicates under the confignode folder.
# For windows platform
# If its prefix is a drive specifier followed by "\\", or if its prefix is "\\\\", then the path is absolute. Otherwise, it is relative.
# system_dir=data\\system
# For Linux platform
# If its prefix is "/", then the path is absolute. Otherwise, it is relative.
# system_dir=data/system


# consensus dir
# If this property is unset, system will save the data in the default relative path directory under the confignode folder(i.e., %CONFIGNODE_HOME%/data/consensus).
# If it is absolute, system will save the data in exact location it points to.
# If it is relative, system will save the data in the relative path directory it indicates under the confignode folder.
# Note: If data_dir is assigned an empty string(i.e.,zero-size), it will be handled as a relative path.
# For windows platform
# If its prefix is a drive specifier followed by "\\", or if its prefix is "\\\\", then the path is absolute. Otherwise, it is relative.
# consensus_dir=data\\consensus
# For Linux platform
# If its prefix is "/", then the path is absolute. Otherwise, it is relative.
# consensus_dir=data/consensus

# UDF lib dir
# If this property is unset, system will save the data in the default relative path directory under
# the UDF folder(i.e., %CONFIGNODE_HOME%/ext/udf).
#
# If it is absolute, system will save the data in exact location it points to.
# If it is relative, system will save the data in the relative path directory it indicates under the
# UDF folder.
# Note: If data_dir is assigned an empty string(i.e.,zero-size), it will be handled as a relative
# path.
#
# For Window platform
# If its prefix is a drive specifier followed by "\\", or if its prefix is "\\\\", then the path is
# absolute. Otherwise, it is relative.
# udf_lib_dir=ext\\udf
#
# For Linux platform
# If its prefix is "/", then the path is absolute. Otherwise, it is relative.
# udf_lib_dir=ext/udf


# temporary lib dir
# If this property is unset, system will save the data in the default relative path directory under
# the UDF folder(i.e., %CONFIGNODE_HOME%/ext/temporary).
#
# If it is absolute, system will save the data in exact location it points to.
# If it is relative, system will save the data in the relative path directory it indicates under the
# UDF folder.
# Note: If data_dir is assigned an empty string(i.e.,zero-size), it will be handled as a relative
# path.
#
# For Window platform
# If its prefix is a drive specifier followed by "\\", or if its prefix is "\\\\", then the path is
# absolute. Otherwise, it is relative.
# udf_temporary_lib_dir=ext\\udf_temporary
#
# For Linux platform
# If its prefix is "/", then the path is absolute. Otherwise, it is relative.
# udf_temporary_lib_dir=ext/udf_temporary


####################
### Procedure Configuration
####################


# Default number of worker thread count
# Datatype: int
#procedure_core_worker_thread_size=4


# Default time interval of completed procedure cleaner work in, time unit is second
# Datatype: int
#procedure_completed_clean_interval=30


# Default ttl of completed procedure, time unit is second
# Datatype: int
#procedure_completed_evict_ttl=800

####################
### Heartbeat configuration
####################


# The heartbeat interval in milliseconds, default is 1000ms
# Datatype: long
# heartbeat_interval=1000


####################
### Routing policy
####################


# The routing policy of read/write requests
# These routing policy are currently supported:
# 1. leader(Default, routing to leader replica)
# 2. greedy(Routing to replica with the lowest load, might cause read un-consistent)
# Datatype: string
# routing_policy=leader


####################
### Read configuration
####################


# The read consistency level
# These consistency levels are currently supported:
# 1. strong(Default, read from the leader replica)
# 2. weak(Read from a random replica)
# Datatype: string
# read_consistency_level=strong


####################
### Authorization Configuration
####################


# which class to serve for authorization. By default, it is LocalFileAuthorizer.
# Another choice is org.apache.iotdb.db.auth.authorizer.OpenIdAuthorizer
# authorizer_provider_class=org.apache.iotdb.commons.auth.authorizer.LocalFileAuthorizer

# If OpenIdAuthorizer is enabled, then openID_url must be set.
# openID_url=

# admin username, default is root
# Datatype: string
# admin_name=root

# encryption provider class
# iotdb_server_encrypt_decrypt_provider=org.apache.iotdb.commons.security.encrypt.MessageDigestEncrypt

# encryption provided class parameter
# iotdb_server_encrypt_decrypt_provider_parameter=

# admin password, default is root
# Datatype: string
# admin_password=root


####################
### RatisConsensus Configuration
####################

# max payload size for a single log-sync-RPC from leader to follower
# partition_region_ratis_log_appender_buffer_size_max = 4194304
# schema_region_ratis_log_appender_buffer_size_max = 4194304
# data_region_ratis_log_appender_buffer_size_max = 4194304

# trigger a snapshot when standalone_snapshot_trigger_threshold logs are written
# partition_region_standalone_snapshot_trigger_threshold=40000

# trigger a snapshot when ratis_snapshot_trigger_threshold logs are written
# partition_region_ratis_snapshot_trigger_threshold = 400000
# schema_region_ratis_snapshot_trigger_threshold = 400000
# data_region_ratis_snapshot_trigger_threshold = 400000

# allow flushing Raft Log asynchronously
# partition_region_ratis_log_unsafe_flush_enable = false
# schema_region_ratis_log_unsafe_flush_enable = false
# data_region_ratis_log_unsafe_flush_enable = false

# max capacity of a single Raft Log segment (by default 24MB)
# partition_region_ratis_log_segment_size_max = 25165824
# schema_region_ratis_log_segment_size_max = 25165824
# data_region_ratis_log_segment_size_max = 25165824

# flow control window for ratis grpc log appender
# partition_region_ratis_grpc_flow_control_window = 4194304
# schema_region_ratis_grpc_flow_control_window = 4194304
# data_region_ratis_grpc_flow_control_window = 4194304

# min election timeout for leader election
# partition_region_ratis_rpc_leader_election_timeout_min_ms = 2000
# schema_region_ratis_rpc_leader_election_timeout_min_ms = 2000
# data_region_ratis_rpc_leader_election_timeout_min_ms = 2000

# max election timeout for leader election
# partition_region_ratis_rpc_leader_election_timeout_max_ms = 4000
# schema_region_ratis_rpc_leader_election_timeout_max_ms = 4000
# data_region_ratis_rpc_leader_election_timeout_max_ms = 4000

# ratis client retry threshold
# partition_region_ratis_request_timeout_ms = 10000
# schema_region_ratis_request_timeout_ms = 10000
# data_region_ratis_request_timeout_ms = 10000

# currently we use exponential back-off retry policy for ratis
# partition_region_ratis_max_retry_attempts = 10
# partition_region_ratis_initial_sleep_time_ms = 100
# partition_region_ratis_max_sleep_time_ms = 10000
# schema_region_ratis_max_retry_attempts = 10
# schema_region_ratis_initial_sleep_time_ms = 100
# schema_region_ratis_max_sleep_time_ms = 10000
# data_region_ratis_max_retry_attempts = 10
# data_region_ratis_initial_sleep_time_ms = 100
# data_region_ratis_max_sleep_time_ms = 10000

# preserve certain logs when take snapshot and purge
# partition_region_ratis_preserve_logs_num_when_purge = 1000
# schema_region_ratis_preserve_logs_num_when_purge = 1000
# data_region_ratis_preserve_logs_num_when_purge = 1000

# first election timeout
# ratis_first_election_timeout_min_ms = 50
# ratis_first_election_timeout_max_ms = 150

####################
### Disk Monitor
####################


# Disk remaining threshold at which DataNode is set to ReadOnly status
# Datatype: double(percentage)
# disk_space_warning_threshold=5.0


