/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// this file is generated by openapi generator

package org.apache.iotdb.openapi.gen.handler.impl;

import org.apache.iotdb.openapi.gen.handler.*;
import org.apache.iotdb.openapi.gen.handler.NotFoundException;
import org.apache.iotdb.openapi.gen.model.*;
import org.apache.iotdb.openapi.gen.model.GroupByFillPlan;

import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;

import java.util.List;

public class RestApiServiceImpl extends RestApiService {
  @Override
  public Response postRestGrafanaData(
      GroupByFillPlan groupByFillPlan, SecurityContext securityContext) throws NotFoundException {
    return Response.ok().entity(new ApiResponseMessage(ApiResponseMessage.OK, "magic!")).build();
  }

  @Override
  public Response postRestGrafanaDataSimplejson(
      GroupByFillPlan groupByFillPlan, SecurityContext securityContext) throws NotFoundException {
    return Response.ok().entity(new ApiResponseMessage(ApiResponseMessage.OK, "magic!")).build();
  }

  @Override
  public Response postRestGrafanaNode(List<String> requestBody, SecurityContext securityContext)
      throws NotFoundException {
    return Response.ok().entity(new ApiResponseMessage(ApiResponseMessage.OK, "magic!")).build();
  }

  @Override
  public Response postRestNonQuery(ReadData readData, SecurityContext securityContext)
      throws NotFoundException {
    return null;
  }

  @Override
  public Response postRestPrometheusQuery(
      String userAgent,
      String xPrometheusRemoteReadVersion,
      byte[] body,
      SecurityContext securityContext)
      throws NotFoundException {
    return null;
  }

  @Override
  public Response postRestPrometheusReceive(
      String userAgent,
      String xPrometheusRemoteWriteVersion,
      byte[] body,
      SecurityContext securityContext)
      throws NotFoundException {
    return null;
  }

  @Override
  public Response postRestDataRead(ReadData readData, SecurityContext securityContext)
      throws NotFoundException {
    return null;
  }

  @Override
  public Response postRestDataWrite(WriteData writeData, SecurityContext securityContext)
      throws NotFoundException {
    return null;
  }
}
