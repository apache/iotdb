<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v2.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schema.jqassistant.org/rule/v2.2 https://jqassistant.github.io/jqassistant/current/schema/jqassistant-rule-v2.2.xsd">
    <group id="singleton">
        <includeConstraint refId="singleton:*"/>
    </group>
    <constraint id="singleton:">
        <requiresConcept refId="singleton:PublicStaticGetInstanceSingleton"/>
        <requiresConcept refId="singleton:PublicStaticPropertySingleton"/>
        <description>No singletons should be used.</description>
        <cypher><![CDATA[
            MATCH
              (type:Type)-[:DECLARES]->(method:Method)-[invocation:INVOKES]->(:Method)<-[:DECLARES]-(singleton:Type:Singleton)
            WHERE NOT
              singleton:Singleton
            RETURN
              type as Type, invocation as Invocation, singleton as SingletonDefinition
            ORDER BY
              invocation.lineNumber
        ]]></cypher>
        <report primaryColumn="Invocation"/>
    </constraint>
    <concept id="singleton:Singleton">
        <description>Identifies singletons as a general concept.</description>
        <cypher><![CDATA[
            MATCH
              (singleton:Type:Singleton)
            RETURN
              singleton
            ORDER BY
              singleton.fqn
        ]]></cypher>
    </concept>
    <!-- Detects singleton patterns where a public static "getInstance()" method is called -->
    <concept id="singleton:PublicStaticGetInstanceSingleton">
        <providesConcept refId="singleton:Singleton"/>
        <description>Identifies singletons that are accessed by a public static getInstance() method that returns the type of the main class.</description>
        <cypher><![CDATA[
            MATCH
              (singleton:Class:Type)-[:DECLARES*]->(instance:Field)-[:OF_TYPE]->(singleton) WHERE instance.static = true
            SET
              singleton:Singleton:GetInstance
            RETURN
              singleton
            ORDER BY
              singleton.fqn
        ]]></cypher>
    </concept>
    <concept id="singleton:PublicStaticPropertySingleton">
        <providesConcept refId="singleton:Singleton"/>
        <description>Identifies singletons that are accessed by a public static property of the type of the main class.</description>
        <cypher><![CDATA[
            MATCH
              (singleton:Class:Type)-[:DECLARES*]->(instance:Field)-[:OF_TYPE]->(singleton)
            SET
              singleton:Singleton:PublicProperty
            RETURN
              singleton
            ORDER BY
              singleton.fqn
        ]]></cypher>
    </concept>
</jqassistant-rules>
