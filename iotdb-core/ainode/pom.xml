<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.iotdb</groupId>
        <artifactId>iotdb-core</artifactId>
        <version>1.4.0-SNAPSHOT</version>
    </parent>
    <artifactId>iotdb-ainode</artifactId>
    <name>IoTDB: Core: AINode</name>
    <dependencies>
        <!-- These dependencies are just added to ensure the other modules are built first -->
        <dependency>
            <groupId>org.apache.iotdb</groupId>
            <artifactId>iotdb-thrift-commons</artifactId>
            <version>1.4.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.iotdb</groupId>
            <artifactId>iotdb-thrift</artifactId>
            <version>1.4.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.iotdb</groupId>
            <artifactId>iotdb-thrift-confignode</artifactId>
            <version>1.4.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.iotdb</groupId>
            <artifactId>iotdb-thrift-ainode</artifactId>
            <version>1.4.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/resources</directory>
                <includes>
                    <include>pyproject.toml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- clean thrift folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>iotdb</directory>
                            <includes>
                                <include>thrift/</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>./</directory>
                            <includes>
                                <include>LICENSE</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>target</directory>
                            <excludes>
                                <exclude>**/*ainode*</exclude>
                            </excludes>
                        </fileset>
                        <fileset>
                            <directory>dist</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- generate git.properties to provide build info -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.basedir}/iotdb/conf/git.properties</generateGitPropertiesFilename>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                        <includeOnlyProperty>^git.dirty$</includeOnlyProperty>
                    </includeOnlyProperties>
                    <commitIdGenerationMode>full</commitIdGenerationMode>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <offline>true</offline>
                    <gitDescribe>
                        <dirty>-dev</dirty>
                    </gitDescribe>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- fill thrift and conf folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-thrift-python-resources</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <!-- here the phase you need -->
                        <phase>generate-sources</phase>
                        <configuration>
                            <encoding>utf-8</encoding>
                            <outputDirectory>${basedir}/iotdb/thrift/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../../iotdb-protocol/thrift-commons/target/generated-sources-python/iotdb/thrift/</directory>
                                </resource>
                                <resource>
                                    <directory>${basedir}/../../iotdb-protocol/thrift-confignode/target/generated-sources-python/iotdb/thrift/</directory>
                                </resource>
                                <resource>
                                    <directory>${basedir}/../../iotdb-protocol/thrift-ainode/target/generated-sources-python/iotdb/thrift/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-thrift-python-resources-datanode</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <!-- here the phase you need -->
                        <phase>generate-sources</phase>
                        <configuration>
                            <encoding>utf-8</encoding>
                            <outputDirectory>${basedir}/iotdb/thrift/datanode</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../../iotdb-protocol/thrift-datanode/target/generated-sources-python/iotdb/thrift/datanode/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Copy License -->
                    <execution>
                        <id>copy-pypi-file-resources</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <!-- here the phase you need -->
                        <phase>generate-sources</phase>
                        <configuration>
                            <encoding>utf-8</encoding>
                            <outputDirectory>${basedir}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/..</directory>
                                    <includes>
                                        <include>LICENSE</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-pom-properties</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <encoding>utf-8</encoding>
                            <outputDirectory>${basedir}/iotdb/conf/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/maven-archiver/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-pyproject-toml</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <encoding>utf-8</encoding>
                            <outputDirectory>${basedir}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/classes/</directory>
                                    <includes>
                                        <include>pyproject.toml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>write-ai-node-version</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <name>ainode_version</name>
                            <regex>-SNAPSHOT</regex>
                            <value>${project.version}</value>
                            <replacement>\.dev</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-whl-file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <condition property="osFamily" value="windows">
                                    <os family="windows"/>
                                </condition>
                                <condition property="osFamily" value="unix">
                                    <os family="unix"/>
                                </condition>
                                <exec executable="python3.8" osfamily="unix" failonerror="false">
                                    <arg value="-m"/>
                                    <arg value="pip"/>
                                    <arg value="install"/>
                                    <arg value="poetry"/>
                                </exec>
                                <exec executable="python" osfamily="windows" failonerror="false">
                                    <arg value="-m"/>
                                    <arg value="pip"/>
                                    <arg value="install"/>
                                    <arg value="poetry"/>
                                </exec>
                                <exec executable="python3.8" osfamily="unix">
                                    <arg value="-m"/>
                                    <arg value="poetry"/>
                                    <arg value="build"/>
                                </exec>
                                <exec executable="python" osfamily="windows">
                                    <arg value="-m"/>
                                    <arg value="poetry"/>
                                    <arg value="build"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>clean-temp-file</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete>
                                    <fileset dir="dist"/>
                                </delete>
                                <delete includeemptydirs="true">
                                    <fileset dir="target">
                                        <exclude name="**/*ainode*"/>
                                    </fileset>
                                </delete>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <finalName>apache-iotdb-ainode-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>ainode.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>create-ainode-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
